{
  "openapi": "3.0.0",
  "paths": {
    "/cars": {
      "get": {
        "operationId": "CarsController_getAllCars",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of cars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarSummary"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all cars",
        "tags": [
          "cars"
        ]
      },
      "post": {
        "operationId": "CarsController_createCar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCarDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Error creating car"
          }
        },
        "summary": "Create a new car",
        "tags": [
          "cars"
        ]
      }
    },
    "/cars/{id}": {
      "get": {
        "operationId": "CarsController_getCarById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Car ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          }
        },
        "summary": "Get a car by ID",
        "tags": [
          "cars"
        ]
      },
      "put": {
        "operationId": "CarsController_updateCar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Car ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          }
        },
        "summary": "Update a car",
        "tags": [
          "cars"
        ]
      },
      "delete": {
        "operationId": "CarsController_deleteCar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Car ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "summary": "Delete a car",
        "tags": [
          "cars"
        ]
      }
    },
    "/seed": {
      "get": {
        "description": "Triggers the seeding of the database with predefined data.",
        "operationId": "SeedController_populateDB",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Database populated successfully"
          },
          "500": {
            "description": "Error while populating the database"
          }
        },
        "summary": "Populate the database with initial data",
        "tags": [
          "seed"
        ]
      }
    },
    "/brands": {
      "get": {
        "operationId": "BrandsController_getAllBrands",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of car brands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all car brands",
        "tags": [
          "brands"
        ]
      }
    },
    "/brands/{brandId}/models": {
      "get": {
        "operationId": "BrandsController_getModelsByBrand",
        "parameters": [
          {
            "name": "brandId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of models for the specified brand",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get models by car brand",
        "tags": [
          "brands"
        ]
      }
    }
  },
  "info": {
    "title": "Angular CRUD Project API",
    "description": "API for managing car and brand endpoints",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CarSummary": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "Car brand",
            "maxLength": 50,
            "example": "Toyota"
          },
          "model": {
            "type": "string",
            "description": "Car model",
            "maxLength": 50,
            "example": "Corolla"
          },
          "id": {
            "type": "string",
            "description": "Car ID"
          },
          "total": {
            "type": "number",
            "description": "Total number of cars"
          }
        },
        "required": [
          "brand",
          "model",
          "id",
          "total"
        ]
      },
      "CarDetailsDto": {
        "type": "object",
        "properties": {
          "registrationDate": {
            "type": "string",
            "description": "Car registration date",
            "example": "2024-10-30T10:01:35.288Z"
          },
          "mileage": {
            "type": "number",
            "description": "Car mileage",
            "example": 15000
          },
          "currency": {
            "type": "string",
            "description": "Currency of the price",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ESA",
              "ESB",
              "ESP",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LTL",
              "LVL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MRU",
              "MTL",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "UYU",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "ZMK",
              "ZMW",
              "ZWD",
              "BIF",
              "CDF",
              "KHR",
              "DOP",
              "KZT",
              "MWK",
              "NGN",
              "PAB",
              "SAR",
              "UGX",
              "AFN",
              "ZMK",
              "SEK",
              "NAD",
              "LRD",
              "QAR",
              "NIO",
              "COP",
              "KGS",
              "GTQ",
              "SYP",
              "BYN",
              "BDT",
              "XOF",
              "XPF",
              "KES",
              "JMD",
              "KHR",
              "TJS",
              "YER",
              "LKR",
              "TTD",
              "XCD",
              "VND",
              "GYD",
              "BZD",
              "PYG",
              "MGA",
              "AFN",
              "PEN",
              "KYD",
              "GMD",
              "MMK",
              "LBP",
              "SRD",
              "TMT",
              "MKD",
              "NPR",
              "STN",
              "RWF",
              "HNL",
              "PLN",
              "MUR",
              "SCR",
              "LYD",
              "SZL",
              "SVC",
              "BAM",
              "MYR",
              "OMR",
              "SLL",
              "XAF",
              "SCR",
              "GEL",
              "MZN",
              "YER",
              "MUR",
              "PYG",
              "KMF",
              "PLN",
              "TWD",
              "SBD",
              "MNT",
              "DZD",
              "MOP",
              "CVE",
              "HUF",
              "FJD"
            ],
            "example": "USD"
          },
          "price": {
            "type": "number",
            "description": "Price of the car",
            "example": 20000
          },
          "manufactureYear": {
            "type": "number",
            "description": "Year of manufacture of the car",
            "example": 2020
          },
          "availability": {
            "type": "boolean",
            "description": "Indicates if the car is available for sale",
            "example": true
          },
          "licensePlate": {
            "type": "string",
            "description": "Car license plate",
            "example": "1234 ABC"
          }
        },
        "required": [
          "registrationDate",
          "mileage",
          "currency",
          "price",
          "manufactureYear",
          "availability",
          "licensePlate"
        ]
      },
      "Car": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "Car brand",
            "maxLength": 50,
            "example": "Toyota"
          },
          "model": {
            "type": "string",
            "description": "Car model",
            "maxLength": 50,
            "example": "Corolla"
          },
          "carDetails": {
            "description": "Car details",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CarDetailsDto"
            }
          },
          "id": {
            "type": "string",
            "description": "Car ID"
          },
          "total": {
            "type": "number",
            "description": "Total number of cars"
          }
        },
        "required": [
          "brand",
          "model",
          "carDetails",
          "id",
          "total"
        ]
      },
      "CreateCarDto": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "description": "Car brand",
            "maxLength": 50,
            "example": "Toyota"
          },
          "model": {
            "type": "string",
            "description": "Car model",
            "maxLength": 50,
            "example": "Corolla"
          },
          "carDetails": {
            "description": "Car details",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CarDetailsDto"
            }
          }
        },
        "required": [
          "brand",
          "model",
          "carDetails"
        ]
      },
      "BrandDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Car brand code",
            "example": "TOYOTA"
          },
          "value": {
            "type": "string",
            "description": "Car brand name",
            "example": "Toyota"
          }
        },
        "required": [
          "code",
          "value"
        ]
      },
      "ModelDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Car model code",
            "example": "COROLLA"
          },
          "value": {
            "type": "string",
            "description": "Car model name",
            "example": "Corolla"
          }
        },
        "required": [
          "code",
          "value"
        ]
      }
    }
  }
}